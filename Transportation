sets
         i A set of depots /1,2/
         v A set of nodes  /1*5/
         n A set of customers /3*5/
         k A set of vehicle types /A*C/
         l /1*2/
;

alias(v,r);
alias(v,p);

scalars
         ee1 The unit cost of fuel consumption /7/
         ee2 The unit cost of carbon emission  /1.2/
         Tf  Dispatch frequency /10/
         ww1 Coefficient of penalty waited cost /3/
         ww2 Coefficient of penalty delayed cost /6/
         nn /2.62/
;

parameters
         aa(k) /A 0.0029, B 0.0027, C 0.0025/
         bb(k) /A 0.26, B 0.24, C 0.22/
         m(k)  Number of k -type vehicles /A 2, B 2, C 2/
         Q(k)  Maximum load of a k -type vehicle /A 80, B 70, C 60/
         ll(k) Maximum travel distance of a k -type vehicle /A 105, B 95, C 90/
         f(k)  The fixed cost of a k -type vehicle /A 235, B 205, C 165/
         c(i)  The fixed cost of depot i /1 1200, 2 1000/
         pp3(i) The pick-up demand of customer i /1 1000,2 1000/
         pp2(n) /3 1200, 4 900, 5 975/
         pp1(v) /1 1000, 2 1000, 3 1200, 4 900, 5 975/
         qq3(i) The delivery demand of customer i /1 1100, 2 1100/
         qq2(n) /3 950, 4 975, 5 100/
         qq1(v) /1 1000, 2 1200, 3 1000, 4 975, 5 900/
         u(i)  Maximum capacity of depot i /1 2500, 2 2575/
         s(i)  The service time at customer i
         t(n)  The arriving time of node i /3 5, 4 11, 5 9/
         e(n)  The time window of customer i
         l2(n) The time window of customer i
         EEE(v,r,K)
         w(v,r,k) The fuel consumption between node i and j of a k -type vehicle
;

e(n)=Uniform(0,7);
l2(n)=uniform(e(n)+5,e(n)+10);


table d(v,r) The distance between node i and node j
         1       2       3       4       5
1        0       0.8     11.4    8.2     5.9
2        0.8     0       9.8     9.2     9.5
3        11.4    9.8     0       18.7    10.5
4        8.2     9.2     18.7    0       8.5
5        5.9     9.5     10.5    8.5     0
;
table tt(v,r) The transportation time between node i and j
         1       2       3       4       5
1        0       1.2     17.1    12.3    8.9
2        1.2     0       14.7    13.8    14.3
3        17.1    14.7    0       28.1    15.8
4        12.3    13.8    28.1    0       12.8
5        8.9     14.3    15.8    12.8    0
;

table uu(v,n,k,l) The load of k -type vehicle numbered l between node i and j
         A.1     A.2     B.1     B.2     C.1     C.2
1.3      80      80      60      60      60      60
1.4      75      75      0       0       50      50
1.5      70      70      65      65      0       0
2.3      80      80      70      70      0       0
2.4      80      80      65      70      60      60
2.5      75      75      60      65      55      50
3.3      80      80      55      55      55      55
3.4      75      75      60      65      40      60
3.5      80      80      60      60      60      0
4.3      0       0       70      70      60      60
4.4      80      80      0       0       60      55
4.5      80      75      60      60      55      50
5.3      70      70      70      70      55      55
5.4      0       70      0       0       60      55
5.5      70      65      60      55      60      45
;
table uu1(i,n,k,l)
         A.1     A.2     B.1     B.2     C.1     C.2
1.3      80      80      60      60      60      60
1.4      75      75      0       0       50      50
1.5      70      70      65      65      0       0
2.3      80      80      70      70      0       0
2.4      80      80      65      70      60      60
2.5      75      75      60      65      55      50
;
table uu2(n,i,k,l)
         A.1     A.2     B.1     B.2     C.1     C.2
3.1      80      80      0       70      60      60
3.2      80      0       70      70      60      0
4.1      0       80      70      0       60      60
4.2      80      80      70      0       60      0
5.1      0       80      70      70      0       60
5.2      80      80      70      70      60      60
;
table UUU(v,r) the vehicle load between node i and j
         1       2       3       4       5
1        0       400     400     250     270
2        450     0       300     415     380
3        350     280     0       375     340
4        270     290     260     0       380
5        280     420     390     185     0
;
table a(v,r) the coefficient of road slope i to j
         1       2       3       4       5
1        0       0.1     0.2     0.14    0.11
2        0.1     0       0.09    0.08    0.11
3        0.2     0.09    0       0.12    0.2
4        0.14    0.08    0.12    0       0.07
5        0.11    0.11    0.2     0.07    0
;

w('1','1','A') = a('1','1')*(aa('A')*UUU('1','1')+bb('A'))*d('1','1');
w('1','2','A') = a('1','2')*(aa('A')*UUU('1','2')+bb('A'))*d('1','2');
w('1','3','A') = a('1','3')*(aa('A')*UUU('1','3')+bb('A'))*d('1','3');
w('1','4','A') = a('1','4')*(aa('A')*UUU('1','4')+bb('A'))*d('1','4');
w('1','5','A') = a('1','5')*(aa('A')*UUU('1','5')+bb('A'))*d('1','5');
w('1','1','B') = a('1','1')*(aa('B')*UUU('1','1')+bb('B'))*d('1','1');
w('1','2','B') = a('1','2')*(aa('B')*UUU('1','2')+bb('B'))*d('1','2');
w('1','3','B') = a('1','3')*(aa('B')*UUU('1','3')+bb('B'))*d('1','3');
w('1','4','B') = a('1','4')*(aa('B')*UUU('1','4')+bb('B'))*d('1','4');
w('1','5','B') = a('1','5')*(aa('B')*UUU('1','5')+bb('B'))*d('1','5');
w('1','1','C') = a('1','1')*(aa('C')*UUU('1','1')+bb('C'))*d('1','1');
w('1','2','C') = a('1','2')*(aa('C')*UUU('1','2')+bb('C'))*d('1','2');
w('1','3','C') = a('1','3')*(aa('C')*UUU('1','3')+bb('C'))*d('1','3');
w('1','4','C') = a('1','4')*(aa('C')*UUU('1','4')+bb('C'))*d('1','4');
w('1','5','C') = a('1','5')*(aa('C')*UUU('1','2')+bb('C'))*d('1','5');

w('2','1','A') = a('2','1')*(aa('A')*UUU('2','1')+bb('A'))*d('2','1');
w('2','2','A') = a('2','2')*(aa('A')*UUU('2','2')+bb('A'))*d('2','2');
w('2','3','A') = a('2','3')*(aa('A')*UUU('2','3')+bb('A'))*d('2','3');
w('2','4','A') = a('2','4')*(aa('A')*UUU('2','4')+bb('A'))*d('2','4');
w('2','5','A') = a('2','5')*(aa('A')*UUU('2','5')+bb('A'))*d('2','5');
w('2','1','B') = a('2','1')*(aa('B')*UUU('2','1')+bb('B'))*d('2','1');
w('2','2','B') = a('2','2')*(aa('B')*UUU('2','2')+bb('B'))*d('2','2');
w('2','3','B') = a('2','3')*(aa('B')*UUU('2','3')+bb('B'))*d('2','3');
w('2','4','B') = a('2','4')*(aa('B')*UUU('2','4')+bb('B'))*d('2','4');
w('2','5','B') = a('2','5')*(aa('B')*UUU('2','5')+bb('B'))*d('2','5');
w('2','1','C') = a('2','1')*(aa('C')*UUU('2','1')+bb('C'))*d('2','1');
w('2','2','C') = a('2','2')*(aa('C')*UUU('2','2')+bb('C'))*d('2','2');
w('2','3','C') = a('2','3')*(aa('C')*UUU('2','3')+bb('C'))*d('2','3');
w('2','4','C') = a('2','4')*(aa('C')*UUU('2','4')+bb('C'))*d('2','4');
w('2','5','C') = a('2','5')*(aa('C')*UUU('2','2')+bb('C'))*d('2','5');

w('3','1','A') = a('3','1')*(aa('A')*UUU('3','1')+bb('A'))*d('3','1');
w('3','2','A') = a('3','2')*(aa('A')*UUU('3','2')+bb('A'))*d('3','2');
w('3','3','A') = a('3','3')*(aa('A')*UUU('3','3')+bb('A'))*d('3','3');
w('3','4','A') = a('3','4')*(aa('A')*UUU('3','4')+bb('A'))*d('3','4');
w('3','5','A') = a('3','5')*(aa('A')*UUU('3','5')+bb('A'))*d('3','5');
w('3','1','B') = a('3','1')*(aa('B')*UUU('3','1')+bb('B'))*d('3','1');
w('3','2','B') = a('3','2')*(aa('B')*UUU('3','2')+bb('B'))*d('3','2');
w('3','3','B') = a('3','3')*(aa('B')*UUU('3','3')+bb('B'))*d('3','3');
w('3','4','B')  = a('3','4')*(aa('B')*UUU('3','4')+bb('B'))*d('3','4');
w('3','5','B')  = a('3','5')*(aa('B')*UUU('3','5')+bb('B'))*d('3','5');
w('3','1','C') = a('3','1')*(aa('C')*UUU('3','1')+bb('C'))*d('3','1');
w('3','2','C') = a('3','2')*(aa('C')*UUU('3','2')+bb('C'))*d('3','2');
w('3','3','C') = a('3','3')*(aa('C')*UUU('3','3')+bb('C'))*d('3','3');
w('3','4','C')= a('3','4')*(aa('C')*UUU('3','4')+bb('C'))*d('3','4');
w('3','5','C') = a('3','5')*(aa('C')*UUU('3','2')+bb('C'))*d('3','5');

w('4','1','A') = a('4','1')*(aa('A')*UUU('4','1')+bb('A'))*d('4','1');
w('4','2','A') = a('4','2')*(aa('A')*UUU('4','2')+bb('A'))*d('4','2');
w('4','3','A') = a('4','3')*(aa('A')*UUU('4','3')+bb('A'))*d('4','3');
w('4','4','A') = a('4','4')*(aa('A')*UUU('4','4')+bb('A'))*d('4','4');
w('4','5','A') = a('4','5')*(aa('A')*UUU('4','5')+bb('A'))*d('4','5');
w('4','1','B') = a('4','1')*(aa('B')*UUU('4','1')+bb('B'))*d('4','1');
w('4','2','B') = a('4','2')*(aa('B')*UUU('4','2')+bb('B'))*d('4','2');
w('4','3','B') = a('4','3')*(aa('B')*UUU('4','3')+bb('B'))*d('4','3');
w('4','4','B') = a('4','4')*(aa('B')*UUU('4','4')+bb('B'))*d('4','4');
w('4','5','B') = a('4','5')*(aa('B')*UUU('4','5')+bb('B'))*d('4','5');
w('4','1','C') = a('4','1')*(aa('C')*UUU('4','1')+bb('C'))*d('4','1');
w('4','2','C') = a('4','2')*(aa('C')*UUU('4','2')+bb('C'))*d('4','2');
w('4','3','C') = a('4','3')*(aa('C')*UUU('4','3')+bb('C'))*d('4','3');
w('4','4','C') = a('4','4')*(aa('C')*UUU('4','4')+bb('C'))*d('4','4');
w('4','5','C') = a('4','5')*(aa('C')*UUU('4','2')+bb('C'))*d('4','5');

w('5','1','A') = a('5','1')*(aa('A')*UUU('5','1')+bb('A'))*d('5','1');
w('5','2','A') = a('5','2')*(aa('A')*UUU('5','2')+bb('A'))*d('5','2');
w('5','3','A') = a('5','3')*(aa('A')*UUU('5','3')+bb('A'))*d('5','3');
w('5','4','A') = a('5','4')*(aa('A')*UUU('5','4')+bb('A'))*d('5','4');
w('5','5','A') = a('5','5')*(aa('A')*UUU('5','5')+bb('A'))*d('5','5');
w('5','1','B') = a('5','1')*(aa('B')*UUU('5','1')+bb('B'))*d('5','1');
w('5','2','B') = a('5','2')*(aa('B')*UUU('5','2')+bb('B'))*d('5','2');
w('5','3','B') = a('5','3')*(aa('B')*UUU('5','3')+bb('B'))*d('5','3');
w('5','4','B') = a('5','4')*(aa('B')*UUU('5','4')+bb('B'))*d('5','4');
w('5','5','B') = a('5','5')*(aa('B')*UUU('5','5')+bb('B'))*d('5','5');
w('5','1','C') = a('5','1')*(aa('C')*UUU('5','1')+bb('C'))*d('5','1');
w('5','2','C') = a('5','2')*(aa('C')*UUU('5','2')+bb('C'))*d('5','2');
w('5','3','C') = a('5','3')*(aa('C')*UUU('5','3')+bb('C'))*d('5','3');
w('5','4','C') = a('5','4')*(aa('C')*UUU('5','4')+bb('C'))*d('5','4');
w('5','5','C') = a('5','5')*(aa('C')*UUU('5','2')+bb('C'))*d('5','5');

*-------------------------------------------------------------------------------

EEE('1','1','A') = nn*w('1','1','A');
EEE('1','2','A') = nn*w('1','2','A');
EEE('1','3','A') = nn*w('1','3','A');
EEE('1','4','A') = nn*w('1','4','A');
EEE('1','5','A') = nn*w('1','5','A');
EEE('1','1','B') = nn*w('1','1','B');
EEE('1','2','B') = nn*w('1','2','B');
EEE('1','3','B') = nn*w('1','3','B');
EEE('1','4','B') = nn*w('1','4','B');
EEE('1','4','B') = nn*w('1','5','B');
EEE('1','1','C') = nn*w('1','1','C');
EEE('1','2','C') = nn*w('1','2','C');
EEE('1','3','C') = nn*w('1','3','C');
EEE('1','4','C') = nn*w('1','4','C');
EEE('1','5','C') = nn*w('1','5','C');

EEE('2','1','A') = nn*w('2','1','A');
EEE('2','2','A') = nn*w('2','2','A');
EEE('2','3','A') = nn*w('2','3','A');
EEE('2','4','A') = nn*w('2','4','A');
EEE('2','5','A') = nn*w('2','5','A');
EEE('2','1','B') = nn*w('2','1','B');
EEE('2','2','B') = nn*w('2','2','B');
EEE('2','3','B') = nn*w('2','3','B');
EEE('2','4','B') = nn*w('2','4','B');
EEE('2','4','B') = nn*w('2','5','B');
EEE('2','1','C') = nn*w('2','1','C');
EEE('2','2','C') = nn*w('2','2','C');
EEE('2','3','C') = nn*w('2','3','C');
EEE('2','4','C') = nn*w('2','4','C');
EEE('2','5','C') = nn*w('2','5','C');

EEE('3','1','A') = nn*w('3','1','A');
EEE('3','2','A') = nn*w('3','2','A');
EEE('3','3','A') = nn*w('3','3','A');
EEE('3','4','A') = nn*w('3','4','A');
EEE('3','5','A') = nn*w('3','5','A');
EEE('3','1','B') = nn*w('3','1','B');
EEE('3','2','B') = nn*w('3','2','B');
EEE('3','3','B') = nn*w('3','3','B');
EEE('1','4','B') = nn*w('3','4','B');
EEE('3','4','B') = nn*w('3','5','B');
EEE('3','1','C') = nn*w('3','1','C');
EEE('3','2','C') = nn*w('3','2','C');
EEE('3','3','C') = nn*w('3','3','C');
EEE('3','4','C') = nn*w('3','4','C');
EEE('3','5','C') = nn*w('3','5','C');

EEE('4','1','A') = nn*w('4','1','A');
EEE('4','2','A') = nn*w('4','2','A');
EEE('4','3','A') = nn*w('4','3','A');
EEE('4','4','A') = nn*w('4','4','A');
EEE('4','5','A') = nn*w('4','5','A');
EEE('4','1','B') = nn*w('4','1','B');
EEE('4','2','B') = nn*w('4','2','B');
EEE('4','3','B') = nn*w('4','3','B');
EEE('4','4','B') = nn*w('4','4','B');
EEE('4','4','B') = nn*w('4','5','B');
EEE('4','1','C') = nn*w('4','1','C');
EEE('4','2','C') = nn*w('4','2','C');
EEE('4','3','C') = nn*w('4','3','C');
EEE('4','4','C') = nn*w('4','4','C');
EEE('4','5','C') = nn*w('4','5','C');

EEE('5','1','A') = nn*w('5','1','A');
EEE('5','2','A') = nn*w('5','2','A');
EEE('5','3','A') = nn*w('5','3','A');
EEE('5','4','A') = nn*w('5','4','A');
EEE('5','5','A') = nn*w('5','5','A');
EEE('5','1','B') = nn*w('5','1','B');
EEE('5','2','B') = nn*w('5','2','B');
EEE('5','3','B') = nn*w('5','3','B');
EEE('5','4','B') = nn*w('5','4','B');
EEE('5','4','B') = nn*w('5','5','B');
EEE('5','1','C') = nn*w('5','1','C');
EEE('5','2','C') = nn*w('5','2','C');
EEE('5','3','C') = nn*w('5','3','C');
EEE('5','4','C') = nn*w('5','4','C');
EEE('5','5','C') = nn*w('5','5','C');

variables
         zz
         ff
*         obj
;
binary variables
         x if k -type vehicle numbered l travels directly from node i and j
         y if customer i is served by k -type vehicle numbered l
         z if customer j is served by depot i
         yy if depot i is selected
;

*positive variables
*         d1
*         dd1
*         d2
*        dd2
;

equations
         obj1
*         obj2
         co1(n)
         co2(n)
         co3(k,l)
         co4(k,l)
         co5(k,l)
         co61(v,n,k,l)
         co62(v,n,k,l)
         co7(k,l)
         co8(p)
         co91(i)
         co92(i)
         co101(i)
         co102(i)
         co11(k,l)
         co12(k,l)
*         arm1
*         arm2
*         of
;

obj1                                                     ..      zz =e= sum(i,c(i)*yy(i))+Tf*(sum((v,r,k,l),(ee1+ee2*nn)*w(v,r,k)*x(v,r,k,l))+sum((i,n,k,l),f(k)*x(i,n,k,l))+ww1*sum(n,max(e(n)-t(n),0))+ww2*sum(n,max(l2(n)-t(n),0))) ;
*obj2                                                     ..      ff =e= sum((v,r,k,l),(ee1+ee2*nn)*w(v,r,k)*x(v,r,k,l))+sum((i,n,k,l),f(k)*x(i,n,k,l))+ww1*sum(n,max(e(n)-t(n),0))+ww2*sum(n,max(l2(n)-t(n),0)) ;
co1(n)                                                   ..      sum((v,k,l),x(v,n,k,l)) =e= 1 ;
co2(n)                                                   ..      sum(i,z(i,n)) =e= 1 ;
co3(k,l)                                                 ..      sum((i,n),x(i,n,k,l)) =l= 1 ;
co4(k,l)                                                 ..      sum(n,pp2(n)*y(n,k,l)) =l= Q(k) ;
co5(k,l)                                                 ..      sum(n,qq2(n)*y(n,k,l)) =l= Q(k) ;
co61(v,n,k,l)                                            ..      uu(v,n,k,l)-x(v,n,k,l)*(qq1(v)-pp1(v)) =g= 0 ;
co62(v,n,k,l)                                            ..      uu(v,n,k,l)-x(v,n,k,l)*(qq1(v)-pp1(v)) =l= q(k) ;
co7(k,l)                                                 ..      sum((v,r),x(v,r,k,l)*d(v,r)) =l= ll(k) ;
co8(p)                                                   ..      sum((v,k,l)$(ord(v) ne ord(p)),x(v,p,k,l)) =e= sum((v,k,l)$(ord(v) ne ord(p)),x(p,v,k,l)) ;
co91(i)                                                  ..      sum(n,z(i,n)*pp2(n)) =l= u(i)*yy(i) ;
co92(i)                                                  ..      sum(n,z(i,n)*pp2(n)) =g= 0 ;
co101(i)                                                 ..      sum(n,z(i,n)*qq2(n)) =l= u(i)*yy(i) ;
co102(i)                                                 ..      sum(n,z(i,n)*qq2(n)) =g= 0 ;
co11(k,l)                                                ..      sum((i,n),uu1(i,n,k,l)) =e= sum((v,n),x(v,n,k,l)*qq2(n)) ;
co12(k,l)                                                ..      sum((n,i),uu2(n,i,k,l)) =e= sum((v,n),x(v,n,k,l)*pp1(v)) ;
*arm1                                                     ..      zz =e= sum(i,c(i)*yy(i))+Tf*ff+d1-dd1 ;
*arm2                                                     ..      ff =e= sum((v,r,k,l),(ee1+ee2*nn)*w(v,r,k)*x(v,r,k,l))+sum((i,n,k,l),f(k)*x(i,n,k,l))+ww1*sum(n,max(e(n)-t(n),0))+ww2*sum(n,max(l2(n)-t(n),0))+d2-dd2;
*of                                                       ..      obj =e= dd1+dd2 ;



*model FIRST /obj1,co1,co2,co3,co4,co5,co61,co62,co7,co8,co91,co92,co101,co102,co11,co12/;
*solve FIRST using MIP min zz;
*model SECOND /obj2,co1,co2,co3,co4,co5,co61,co62,co7,co8,co91,co92,co101,co102,co11,co12/;
*solve SECOND using MIP min ff;
*display zz.l,ff.l;

*model asli /of,co1,co2,co3,co4,co5,co61,co62,co7,co8,co91,co92,co101,co102,co11,co12,arm1,arm2/;
*solve asli using MIP min obj;
*option optcr=0 , optcr=0;
*option  limrow=10000000, limcol=10000000;
*option lp = Cplex;
*display obj.l , x.l , y.l , z.l , yy.l , dd1.l , dd2.l;

model asli /all/;
solve asli using MIP min zz;
option optcr=0 , optcr=0;
option  limrow=10000000, limcol=10000000;
option lp = Cplex;
display  x.l , y.l , z.l , yy.l ;
